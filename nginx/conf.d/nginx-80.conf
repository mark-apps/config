server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;

    access_log  logs/access_80.log  main;
    #access_log  "pipe:rollback logs/host.access_log interval=1d baknum=7 maxsize=2G"  main;

    location / {
        root html;
        index  index.html index.htm;
    }
	
	location /resources/{
	    alias /nas/; 
        #autoindex on;
        #autoindex_format html;
        #autoindex_exact_size off;
        #autoindex_localtime on;
	    fancyindex on;
        fancyindex_exact_size off;
        fancyindex_localtime on;
	    fancyindex_header "/Nginx-Fancyindex-Theme/light-Theme/header.html";
        fancyindex_footer "/Nginx-Fancyindex-Theme/light-Theme/footer.html";
        fancyindex_ignore "Nginx-Fancyindex-Theme";
        fancyindex_name_length 255;
        charset utf-8,gbk;
	}
	
	location /download/{
       alias /data/nas/;
       autoindex on;
       autoindex_format html;
       autoindex_exact_size off;
       autoindex_localtime on;
	   charset utf-8,gbk;
	}

    location /android/{
        proxy_pass http://127.0.0.1:9080/;
        proxy_set_header X-Forwarded-Proto http;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Request-ctx /android;

        ##静态资源增加缓存设置,充分利用浏览器缓存机制
        if ($request_filename ~* .*\.(?:js|css)$){
            expires      7d;
        }
        if ($request_filename ~* .*\.(?:jpg|jpeg|gif|png|ico|svg|mp4)$){
            expires      7d;
        }
    }
	
    location /ios/{
        proxy_pass http://127.0.0.1:9080/;
        proxy_set_header X-Forwarded-Proto http;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Request-ctx /ios;
    }
	
    location /appDownload/{
    #设置非浏览器访问
        internal;
        charset utf-8;
        alias /data/nas/app/;
    }
	

    location /ngx_status  {
        stub_status on;
        access_log off;
        #allow 127.0.0.1;允许哪个ip可以访问
    }
	
    location /aaa/{
        ##代理请求头设置（可选，建议配置）
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        client_max_body_size 200m;

        ##Nginx CORS跨域配置（有需要开启）
        # add_header 'Access-Control-Allow-Origin' $http_origin;
        # add_header 'Access-Control-Allow-Credentials' 'true';
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        # add_header 'Access-Control-Allow-Headers' 'DNT,web-token,app-token,Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Mx-ReqToken,X-Data-Type,X-Auth-Token,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        # add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        # if ($request_method = 'OPTIONS') {
        #     add_header 'Access-Control-Max-Age' 1728000;
        #     add_header 'Content-Type' 'text/plain; charset=utf-8';
        #     add_header 'Content-Length' 0;
        #     return 204;
        # }

        #根据请求文件名，返回对应的 Content-Type （有需要开启配置）
        # if ( $request_uri ~ .*\.(css)$ ) {
        #     add_header 'Content-Type' 'text/css';
        # }
        # if ( $request_uri ~ .*\.(html|htm)$) {
        #     add_header 'Content-Type' 'text/html;charset=utf-8';
        # }
        # if ( $request_uri ~ .*\.(js)$ ) {
        #     add_header 'Content-Type' 'application/javascript;application/x-javascript';
        # }
        proxy_pass http://127.0.0.1:8080/aaa/;
        proxy_connect_timeout 5s; #nginx跟后端服务器连接超时时间(代理连接超时)
        proxy_send_timeout 10s; #后端服务器数据回传时间(代理发送超时)
        proxy_read_timeout 10s; #连接成功后，后端服务器响应时间(代理接收超时)
    }
	
	
    location /xxx/{
        proxy_pass http://47.242.1.243:10080/xxx/;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        client_max_body_size 100m;
    }
        
    #error_page  404              /404.html;
	error_page  502		/502.html;
    # redirect server error pages to the static page /50x.html
	 error_page   500 503 504  /50x.html;
    location = /50x.html {
       root   html;
    }
}